# Release package on GitHub and publish to PyPI
# IMPORTANT -- 1 MANUAL STEP
#   * FOLLOWING TAGGED RELEASE
#       - update CHANGELOG.md
#--------------------------------------------------
name: Release & Publish

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: create release & publish to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine jupyter urllib3 pandas pyyaml
          python setup.py sdist bdist_wheel
      
      - name: run Changelog
        run: |
          jupyter nbconvert --to notebook --execute --inplace --ExecutePreprocessor.timeout=-1   --ExecutePreprocessor.kernel_name=python3 tools/gitcount.ipynb
      
      - name: cat Changelog
        uses: pCYSl5EDgo/cat@master
        id: changetxt
        with:
          path: ./tools/changelog.md
        env:
          TEXT: ${{ steps.changetxt.outputs.text }}
      
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # token is provided by GHA, DO NOT create
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changetxt.outputs.text }}
          draft: false
          prerelease: false
      
      - name: get asset name
        run: |
          export PKG=$(ls dist/)
          set -- $PKG
          echo "name=$1" >> $GITHUB_ENV
      
      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step   above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog   post for more info:   https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: dist/${{ env.name }}
          asset_name: ${{ env.name }}
          asset_content_type: application/zip
      
      - name: publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
  
